name: Cross-compile AREDN Phonebook for OpenWrt

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug Repo Contents
        run: |
          echo "Repository root ($GITHUB_WORKSPACE):"
          ls -la "$GITHUB_WORKSPACE"
          echo ""

      - name: Define OpenWrt Target Architecture
        id: set_target
        run: |
          # ── adjust for your device ───────────────────────────────────────────
          echo "OPENWRT_TARGET=ath79"     >> "$GITHUB_OUTPUT"
          echo "OPENWRT_SUBTARGET=generic" >> "$GITHUB_OUTPUT"
          echo "C_PROJECT_DIR=Phonebook"  >> "$GITHUB_OUTPUT"   # ← capital “P”

      - name: Download and Extract OpenWrt SDK
        env:
          OPENWRT_TARGET:   ${{ steps.set_target.outputs.OPENWRT_TARGET }}
          OPENWRT_SUBTARGET: ${{ steps.set_target.outputs.OPENWRT_SUBTARGET }}
        run: |
          SDK_BASE="https://downloads.openwrt.org/snapshots/targets/${OPENWRT_TARGET}/${OPENWRT_SUBTARGET}/"
          FILE=$(curl -s "$SDK_BASE" \
            | grep -oP 'openwrt-sdk-[^"]*\.Linux-x86_64\.(tar\.xz|tar\.zst)' \
            | head -n1)
          test -n "$FILE" || { echo "SDK not found"; exit 1; }
          curl -L "${SDK_BASE}${FILE}" -o sdk.tar
          tar -xf sdk.tar
          SDK_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*" | head -n1)
          echo "SDK_DIR=$SDK_DIR" >> "$GITHUB_ENV"

      - name: Configure Cross-Compilation Environment
        run: |
          TOOLCHAIN=$(find "${{ env.SDK_DIR }}/staging_dir" -maxdepth 1 -type d -name "toolchain-*" | head -n1)
          export PATH="${TOOLCHAIN}/bin:$PATH"
          CC_BIN=$(find "${TOOLCHAIN}/bin" -name "*-gcc" | head -n1)
          PREFIX=${CC_BIN%-gcc}
          for var in CC CXX AR RANLIB; do
            echo "${var}=${PREFIX}-${var,,}" >> "$GITHUB_ENV"
          done
          echo "PATH=$PATH"          >> "$GITHUB_ENV"
          echo "STAGING_DIR=${{ env.SDK_DIR }}/staging_dir" >> "$GITHUB_ENV"
          echo "OPENWRT_TRIPLET=$PREFIX" >> "$GITHUB_ENV"

      - name: Add Phonebook to SDK
        run: |
          cp -r "${{ steps.set_target.outputs.C_PROJECT_DIR }}" "${{ env.SDK_DIR }}/package/Phonebook"

      - name: Update Feeds
        working-directory: ${{ env.SDK_DIR }}
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install Phonebook

      - name: Build Phonebook Package
        working-directory: ${{ env.SDK_DIR }}
        run: |
          make package/Phonebook/compile V=s

      - name: Upload .ipk Artifact
        uses: actions/upload-artifact@v4
        with:
          name: phonebook-ipk-${{ steps.set_target.outputs.OPENWRT_TARGET }}-${{ steps.set_target.outputs.OPENWRT_SUBTARGET }}
          path: |
            bin/packages/${{ steps.set_target.outputs.OPENWRT_TARGET }}/${{ steps.set_target.outputs.OPENWRT_SUBTARGET }}/phonebook*.ipk
