name: Cross-compile AREDN Phonebook for OpenWrt

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug repo contents
        run: |
          echo "Workspace root: $GITHUB_WORKSPACE"
          ls -1a "$GITHUB_WORKSPACE"

      - name: Define targets
        id: vars
        run: |
          echo "OPENWRT_TARGET=ath79"     >> "$GITHUB_OUTPUT"
          echo "OPENWRT_SUBTARGET=generic" >> "$GITHUB_OUTPUT"
          echo "C_PROJECT_DIR=Phonebook"  >> "$GITHUB_OUTPUT"   # capital “P”

      - name: Download & extract OpenWrt SDK
        env:
          OPENWRT_TARGET:   ${{ steps.vars.outputs.OPENWRT_TARGET }}
          OPENWRT_SUBTARGET: ${{ steps.vars.outputs.OPENWRT_SUBTARGET }}
        run: |
          SDK_BASE="https://downloads.openwrt.org/snapshots/targets/${OPENWRT_TARGET}/${OPENWRT_SUBTARGET}/"
          SDK_FILE=$(curl -s "$SDK_BASE" \
            | grep -oP 'openwrt-sdk-[^"]*\.Linux-x86_64\.(tar\.xz|tar\.zst)' \
            | head -n1)
          test -n "$SDK_FILE" || { echo "No SDK found at $SDK_BASE"; exit 1; }
          echo "Fetching $SDK_FILE…"
          curl -L "${SDK_BASE}${SDK_FILE}" -o sdk.tar.${SDK_FILE##*.}

          mkdir sdk
          if [[ "$SDK_FILE" == *.xz ]]; then
            tar -xJf sdk.tar.xz -C sdk --strip-components=1
          else
            # for .tar.zst
            tar --use-compress-program=unzstd \
                -xf sdk.tar.zst -C sdk --strip-components=1
          fi

          echo "SDK extracted into $(pwd)/sdk"
          echo "SDK_DIR=$(pwd)/sdk" >> "$GITHUB_ENV"

      - name: Copy & build Phonebook package
        env:
          SDK_DIR:       ${{ env.SDK_DIR }}
          C_PROJECT_DIR: ${{ steps.vars.outputs.C_PROJECT_DIR }}
        run: |
          set -eux

          # 1) enter SDK
          cd "$SDK_DIR"

          # 2) inject your package
          cp -r "$GITHUB_WORKSPACE/$C_PROJECT_DIR" package/Phonebook

          # 3) update+install feeds
          ./scripts/feeds update -a
          ./scripts/feeds install Phonebook

          # 4) compile just your package
          make package/Phonebook/compile V=s

      - name: Upload .ipk artifact
        uses: actions/upload-artifact@v4
        with:
          name: phonebook-${{ steps.vars.outputs.OPENWRT_TARGET }}-${{ steps.vars.outputs.OPENWRT_SUBTARGET }}.ipk
          path: |
            ${{ env.SDK_DIR }}/bin/packages/${{ steps.vars.outputs.OPENWRT_TARGET }}/${{ steps.vars.outputs.OPENWRT_SUBTARGET }}/phonebook*.ipk
