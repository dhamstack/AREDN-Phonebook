name: Build OpenWRT .ipk Package

on:
  # when you push a tag like "v1.2.3" (or "1.2.3")
  push:
    tags:
      - '*.*.*'
  pull_request:

permissions:
  contents: write   # needed to create releases
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - arch: ath79
            subtarget: generic
          - arch: x86
            subtarget: 64
          - arch: ipq40xx
            subtarget: generic

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SDK URL
        id: sdk
        run: |
          if [[ "${{ matrix.target.arch }}" == "ath79" ]]; then
            echo "sdk_url=https://downloads.openwrt.org/releases/23.05.3/targets/ath79/generic/openwrt-sdk-23.05.3-ath79-generic_gcc-12.3.0_musl.Linux-x86_64.tar.xz" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.target.arch }}" == "ipq40xx" ]]; then
            echo "sdk_url=https://downloads.openwrt.org/releases/23.05.3/targets/ipq40xx/generic/openwrt-sdk-23.05.3-ipq40xx-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz" >> $GITHUB_OUTPUT
          else
            echo "sdk_url=https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-sdk-23.05.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz" >> $GITHUB_OUTPUT
          fi

      - name: Download and extract SDK
        run: |
          wget "${{ steps.sdk.outputs.sdk_url }}" -O sdk.tar.xz
          tar -xf sdk.tar.xz
          mv openwrt-sdk-* sdk

      - name: Inject Phonebook package
        run: |
          mkdir -p sdk/package/phonebook
          cp -r Phonebook/* sdk/package/phonebook/
          mkdir -p sdk/package/phonebook/files/etc
          cp Phonebook/files/etc/sipserver.conf sdk/package/phonebook/files/etc/

          # Verify all source files are present
          echo "Verifying source structure:"
          find sdk/package/phonebook/src -name "*.c" -o -name "*.h" | sort

          # Verify Makefile includes all modules
          echo "Checking Makefile for passive_safety module:"
          grep -q "passive_safety" sdk/package/phonebook/Makefile && echo "✓ passive_safety found in Makefile" || echo "✗ passive_safety missing in Makefile"

      - name: Build package
        run: |
          cd sdk
          make defconfig

          # Show package info
          echo "Building phonebook package for ${{ matrix.target.arch }}..."

          # Build with verbose output and error handling
          if ! make package/phonebook/compile V=s -j$(nproc); then
            echo "BUILD FAILED! Checking for errors..."
            echo "=== Build Log Tail ==="
            find . -name "*.log" -exec tail -n 50 {} \; || echo "No log files found"
            echo "=== Package Structure ==="
            find package/phonebook -type f | head -20
            exit 1
          fi

          # Show build results
          echo "Build completed! Searching for IPK files..."
          find bin -name "*.ipk" -ls || echo "No IPK files found in bin/"

      # Find and rename the built IPK file
      - name: Find IPK file
        id: find_ipk
        run: |
          IPK_FILE=$(find sdk/bin/packages -name "*.ipk" | head -n 1)
          if [ -z "$IPK_FILE" ]; then
            echo "ERROR: No IPK file found!"
            find sdk/bin -type f -name "*.ipk" || echo "No IPK files anywhere"
            exit 1
          fi

          # Rename IPK file to include architecture
          ARCH_IPK="phonebook-${{ matrix.target.arch }}-${{ github.ref_name }}.ipk"
          cp "$IPK_FILE" "$ARCH_IPK"

          echo "ipk_path=$ARCH_IPK" >> $GITHUB_OUTPUT
          echo "Original IPK: $IPK_FILE"
          echo "Renamed to: $ARCH_IPK"
          ls -la "$ARCH_IPK"

      # Upload IPK file to release
      - name: Upload IPK to Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.find_ipk.outputs.ipk_path }}
          name: AREDN SIP Server ${{ github.ref_name }}
          body: |
            AREDN Phonebook SIP Server Release ${{ github.ref_name }}

            ## Architecture Support
            - ath79/generic (MikroTik devices)
            - x86/64 (Intel devices)
            - ipq40xx/generic (AREDN mesh devices)

            ## Features
            - Passive safety self-healing system
            - Automatic resource management
            - Thread recovery monitoring
            - Smart file operations with rollback
            - Enhanced reliability for emergency operations

            ## Installation
            ```bash
            # Download appropriate IPK for your architecture
            opkg install phonebook-*.ipk
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
